/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import java.util.UUID;
import com.konfigthis.client.model.WorkEntriesCreateNewEntryRequest;
import com.konfigthis.client.model.WorkEntriesCreateNewEntryRequestWorkEntryIn;
import com.konfigthis.client.model.WorkEntriesCreateNewEntryRequestWorkEntryOut;
import com.konfigthis.client.model.WorkEntriesCreateNewEntryResponse;
import com.konfigthis.client.model.WorkEntriesDeleteByIdResponse;
import com.konfigthis.client.model.WorkEntriesEndLastEntryRequest;
import com.konfigthis.client.model.WorkEntriesEndLastEntryResponse;
import com.konfigthis.client.model.WorkEntriesListResponse;
import com.konfigthis.client.model.WorkEntriesStartNewEntryRequest;
import com.konfigthis.client.model.WorkEntriesStartNewEntryRequestWorkEntryIn;
import com.konfigthis.client.model.WorkEntriesStartNewEntryResponse;
import com.konfigthis.client.model.WorkEntriesUpdateWorkEntryRequest;
import com.konfigthis.client.model.WorkEntriesUpdateWorkEntryRequestWorkEntryIn;
import com.konfigthis.client.model.WorkEntriesUpdateWorkEntryRequestWorkEntryOut;
import com.konfigthis.client.model.WorkEntriesUpdateWorkEntryResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkEntriesApi
 */
@Disabled
public class WorkEntriesApiTest {

    private static WorkEntriesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WorkEntriesApi(apiClient);
    }

    /**
     * Create Work Entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewEntryTest() throws ApiException {
        UUID employeeId = null;
        String workEntryType = null;
        WorkEntriesCreateNewEntryRequestWorkEntryIn workEntryIn = null;
        UUID workBreakId = null;
        UUID workCheckTypeId = null;
        WorkEntriesCreateNewEntryRequestWorkEntryOut workEntryOut = null;
        WorkEntriesCreateNewEntryResponse response = api.createNewEntry(employeeId, workEntryType, workEntryIn)
                .workBreakId(workBreakId)
                .workCheckTypeId(workCheckTypeId)
                .workEntryOut(workEntryOut)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Work Entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        UUID id = null;
        WorkEntriesDeleteByIdResponse response = api.deleteById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Ends the last work entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void endLastEntryTest() throws ApiException {
        UUID employeeId = null;
        WorkEntriesStartNewEntryRequestWorkEntryIn workEntryOut = null;
        WorkEntriesEndLastEntryResponse response = api.endLastEntry(employeeId)
                .workEntryOut(workEntryOut)
                .execute();
        // TODO: test validations
    }

    /**
     * List Company Work Entries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        UUID employeeId = null;
        LocalDate from = null;
        LocalDate to = null;
        String updatedAtGte = null;
        String updatedAtLte = null;
        String onlyReturn = null;
        Integer limit = null;
        Integer page = null;
        String orderBy = null;
        WorkEntriesListResponse response = api.list()
                .employeeId(employeeId)
                .from(from)
                .to(to)
                .updatedAtGte(updatedAtGte)
                .updatedAtLte(updatedAtLte)
                .onlyReturn(onlyReturn)
                .limit(limit)
                .page(page)
                .orderBy(orderBy)
                .execute();
        // TODO: test validations
    }

    /**
     * Starts a new work entry right now
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startNewEntryTest() throws ApiException {
        UUID employeeId = null;
        WorkEntriesStartNewEntryRequestWorkEntryIn workEntryIn = null;
        UUID workCheckTypeId = null;
        UUID workBreakId = null;
        WorkEntriesStartNewEntryResponse response = api.startNewEntry(employeeId)
                .workEntryIn(workEntryIn)
                .workCheckTypeId(workCheckTypeId)
                .workBreakId(workBreakId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Work Entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkEntryTest() throws ApiException {
        String workEntryType = null;
        WorkEntriesUpdateWorkEntryRequestWorkEntryIn workEntryIn = null;
        UUID id = null;
        WorkEntriesUpdateWorkEntryRequestWorkEntryOut workEntryOut = null;
        WorkEntriesUpdateWorkEntryResponse response = api.updateWorkEntry(workEntryType, workEntryIn, id)
                .workEntryOut(workEntryOut)
                .execute();
        // TODO: test validations
    }

}
