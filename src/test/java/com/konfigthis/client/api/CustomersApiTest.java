/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CustomersCreateNewCustomerRequest;
import com.konfigthis.client.model.CustomersCreateNewCustomerResponse;
import com.konfigthis.client.model.CustomersListResponse;
import com.konfigthis.client.model.CustomersRemoveByIdResponse;
import com.konfigthis.client.model.CustomersUpdateCustomerRequest;
import com.konfigthis.client.model.CustomersUpdateCustomerResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private static CustomersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CustomersApi(apiClient);
    }

    /**
     * Create a customer
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewCustomerTest() throws ApiException {
        UUID companyId = null;
        String customerName = null;
        String description = null;
        String firstName = null;
        String lastName = null;
        String email = null;
        String phone = null;
        CustomersCreateNewCustomerResponse response = api.createNewCustomer(companyId, customerName)
                .description(description)
                .firstName(firstName)
                .lastName(lastName)
                .email(email)
                .phone(phone)
                .execute();
        // TODO: test validations
    }

    /**
     * List customers
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String orderBy = null;
        CustomersListResponse response = api.list()
                .limit(limit)
                .page(page)
                .orderBy(orderBy)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a customer
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        UUID id = null;
        CustomersRemoveByIdResponse response = api.removeById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a customer
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomerTest() throws ApiException {
        String customerName = null;
        UUID id = null;
        String description = null;
        String firstName = null;
        String lastName = null;
        String email = null;
        String phone = null;
        CustomersUpdateCustomerResponse response = api.updateCustomer(customerName, id)
                .description(description)
                .firstName(firstName)
                .lastName(lastName)
                .email(email)
                .phone(phone)
                .execute();
        // TODO: test validations
    }

}
