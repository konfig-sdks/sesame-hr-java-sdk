/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ContractsCreateNewContractRequest;
import com.konfigthis.client.model.ContractsCreateNewContractResponse;
import com.konfigthis.client.model.ContractsDeleteContractResponse;
import com.konfigthis.client.model.ContractsGetByEmployeeIdResponse;
import com.konfigthis.client.model.ContractsGetCurrentContractByEmployeeIdResponse;
import com.konfigthis.client.model.ContractsUpdateContractRequest;
import com.konfigthis.client.model.ContractsUpdateContractResponse;
import java.time.LocalDate;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractsApi
 */
@Disabled
public class ContractsApiTest {

    private static ContractsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContractsApi(apiClient);
    }

    /**
     * Create a contract
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewContractTest() throws ApiException {
        UUID employeeId = null;
        LocalDate startAt = null;
        String code = null;
        LocalDate endAt = null;
        String comment = null;
        ContractsCreateNewContractResponse response = api.createNewContract(employeeId, startAt, code)
                .endAt(endAt)
                .comment(comment)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a contract
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteContractTest() throws ApiException {
        UUID contractId = null;
        ContractsDeleteContractResponse response = api.deleteContract(contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get contracts by employee
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByEmployeeIdTest() throws ApiException {
        UUID employeeId = null;
        Integer limit = null;
        Integer page = null;
        ContractsGetByEmployeeIdResponse response = api.getByEmployeeId(employeeId)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Get current contract by employeeId
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrentContractByEmployeeIdTest() throws ApiException {
        UUID employeeId = null;
        ContractsGetCurrentContractByEmployeeIdResponse response = api.getCurrentContractByEmployeeId(employeeId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a contract
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateContractTest() throws ApiException {
        LocalDate startAt = null;
        String code = null;
        UUID contractId = null;
        LocalDate endAt = null;
        String comment = null;
        ContractsUpdateContractResponse response = api.updateContract(startAt, code, contractId)
                .endAt(endAt)
                .comment(comment)
                .execute();
        // TODO: test validations
    }

}
