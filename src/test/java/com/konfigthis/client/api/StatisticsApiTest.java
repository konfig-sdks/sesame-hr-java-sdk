/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.StatisticsListWorkedAbsenceDaysByEmployeeResponse;
import com.konfigthis.client.model.StatisticsListWorkedHoursByEmployeeResponse;
import com.konfigthis.client.model.StatisticsListWorkedHoursByWeekDayResponse;
import com.konfigthis.client.model.StatisticsListWorkedNightHoursResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatisticsApi
 */
@Disabled
public class StatisticsApiTest {

    private static StatisticsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new StatisticsApi(apiClient);
    }

    /**
     * List Worked Absence Days By Employee
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkedAbsenceDaysByEmployeeTest() throws ApiException {
        LocalDate from = null;
        LocalDate to = null;
        List<UUID> employeeIdsIn = null;
        Integer limit = null;
        Integer page = null;
        StatisticsListWorkedAbsenceDaysByEmployeeResponse response = api.listWorkedAbsenceDaysByEmployee(from, to)
                .employeeIdsIn(employeeIdsIn)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * List Worked Hours By Employee
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkedHoursByEmployeeTest() throws ApiException {
        LocalDate from = null;
        LocalDate to = null;
        List<UUID> employeeIdsIn = null;
        Boolean withChecks = null;
        Integer limit = null;
        Integer page = null;
        StatisticsListWorkedHoursByEmployeeResponse response = api.listWorkedHoursByEmployee(from, to)
                .employeeIdsIn(employeeIdsIn)
                .withChecks(withChecks)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * List Worked Hours By Employee and Week Day
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkedHoursByWeekDayTest() throws ApiException {
        LocalDate from = null;
        LocalDate to = null;
        List<UUID> employeeIdsIn = null;
        Integer limit = null;
        Integer page = null;
        StatisticsListWorkedHoursByWeekDayResponse response = api.listWorkedHoursByWeekDay(from, to)
                .employeeIdsIn(employeeIdsIn)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * List Worked Hours By Employee In Night Hours
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkedNightHoursTest() throws ApiException {
        LocalDate from = null;
        LocalDate to = null;
        List<UUID> employeeIdsIn = null;
        Boolean withChecks = null;
        Integer limit = null;
        Integer page = null;
        StatisticsListWorkedNightHoursResponse response = api.listWorkedNightHours(from, to)
                .employeeIdsIn(employeeIdsIn)
                .withChecks(withChecks)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

}
