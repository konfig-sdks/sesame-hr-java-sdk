/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.HolidayCalendarsCreateNewCalendarRequest;
import com.konfigthis.client.model.HolidayCalendarsCreateNewCalendarRequestDaysOffInner;
import com.konfigthis.client.model.HolidayCalendarsCreateNewCalendarResponse;
import com.konfigthis.client.model.HolidayCalendarsGetByIdResponse;
import com.konfigthis.client.model.HolidayCalendarsListCalendarResponse;
import com.konfigthis.client.model.HolidayCalendarsRemoveByIdResponse;
import com.konfigthis.client.model.HolidayCalendarsUpdateByIdRequest;
import com.konfigthis.client.model.HolidayCalendarsUpdateByIdRequestDaysOffInner;
import com.konfigthis.client.model.HolidayCalendarsUpdateByIdResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HolidayCalendarsApi
 */
@Disabled
public class HolidayCalendarsApiTest {

    private static HolidayCalendarsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new HolidayCalendarsApi(apiClient);
    }

    /**
     * Create Holidays Calendar
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewCalendarTest() throws ApiException {
        String name = null;
        List<HolidayCalendarsCreateNewCalendarRequestDaysOffInner> daysOff = null;
        HolidayCalendarsCreateNewCalendarResponse response = api.createNewCalendar(name, daysOff)
                .execute();
        // TODO: test validations
    }

    /**
     * List Holiday Calendar
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        UUID holidayCalendarId = null;
        Integer limit = null;
        Integer page = null;
        HolidayCalendarsGetByIdResponse response = api.getById(holidayCalendarId)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * List Holidays Calendar
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCalendarTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        String nameContains = null;
        HolidayCalendarsListCalendarResponse response = api.listCalendar()
                .limit(limit)
                .page(page)
                .nameContains(nameContains)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Holidays Calendar
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        UUID holidayCalendarId = null;
        HolidayCalendarsRemoveByIdResponse response = api.removeById(holidayCalendarId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Holidays Calendar
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String name = null;
        List<HolidayCalendarsUpdateByIdRequestDaysOffInner> daysOff = null;
        UUID holidayCalendarId = null;
        HolidayCalendarsUpdateByIdResponse response = api.updateById(name, daysOff, holidayCalendarId)
                .execute();
        // TODO: test validations
    }

}
