/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.SalariesCreateSalaryRequest;
import com.konfigthis.client.model.SalariesCreateSalaryResponse;
import com.konfigthis.client.model.SalariesDeleteSalaryResponse;
import com.konfigthis.client.model.SalariesListContributionGroupsResponse;
import com.konfigthis.client.model.SalariesListResponse;
import com.konfigthis.client.model.SalariesUpdateSalaryRequest;
import com.konfigthis.client.model.SalariesUpdateSalaryResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SalariesApi
 */
@Disabled
public class SalariesApiTest {

    private static SalariesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SalariesApi(apiClient);
    }

    /**
     * Create Salary
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSalaryTest() throws ApiException {
        UUID employeeId = null;
        String payPeriod = null;
        String currency = null;
        Float grossSalary = null;
        Integer payments = null;
        UUID contributionGroupId = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        String comments = null;
        SalariesCreateSalaryResponse response = api.createSalary(employeeId, payPeriod, currency, grossSalary, payments, contributionGroupId, startDate)
                .endDate(endDate)
                .comments(comments)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a salary
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSalaryTest() throws ApiException {
        UUID salaryId = null;
        SalariesDeleteSalaryResponse response = api.deleteSalary(salaryId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Salaries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        UUID employeeId = null;
        UUID salaryId = null;
        String payPeriod = null;
        Integer grossSalary = null;
        Integer payments = null;
        String contributionGroup = null;
        LocalDate startDate = null;
        LocalDate endDate = null;
        Integer limit = null;
        Integer page = null;
        SalariesListResponse response = api.list(employeeId)
                .salaryId(salaryId)
                .payPeriod(payPeriod)
                .grossSalary(grossSalary)
                .payments(payments)
                .contributionGroup(contributionGroup)
                .startDate(startDate)
                .endDate(endDate)
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * List Contribution Groups
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listContributionGroupsTest() throws ApiException {
        Integer limit = null;
        Integer page = null;
        SalariesListContributionGroupsResponse response = api.listContributionGroups()
                .limit(limit)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a salary
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSalaryTest() throws ApiException {
        UUID salaryId = null;
        LocalDate endDate = null;
        String comments = null;
        SalariesUpdateSalaryResponse response = api.updateSalary(salaryId)
                .endDate(endDate)
                .comments(comments)
                .execute();
        // TODO: test validations
    }

}
