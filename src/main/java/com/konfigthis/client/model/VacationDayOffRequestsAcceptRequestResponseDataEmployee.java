/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CoreV3EmployeeCustomFieldsInner;
import com.konfigthis.client.model.VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * VacationDayOffRequestsAcceptRequestResponseDataEmployee
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VacationDayOffRequestsAcceptRequestResponseDataEmployee {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  /**
   * Gets or Sets workStatus
   */
  @JsonAdapter(WorkStatusEnum.Adapter.class)
 public enum WorkStatusEnum {
    ONLINE("online"),
    
    OFFLINE("offline"),
    
    PAUSED("paused"),
    
    REMOTE("remote");

    private String value;

    WorkStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WorkStatusEnum fromValue(String value) {
      for (WorkStatusEnum b : WorkStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WorkStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WorkStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WorkStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WorkStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_WORK_STATUS = "workStatus";
  @SerializedName(SERIALIZED_NAME_WORK_STATUS)
  private WorkStatusEnum workStatus;

  public static final String SERIALIZED_NAME_IMAGE_PROFILE_U_R_L = "imageProfileURL";
  @SerializedName(SERIALIZED_NAME_IMAGE_PROFILE_U_R_L)
  private String imageProfileURL;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private Integer code;

  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  private Integer pin;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany company;

  /**
   * 
   */
  @JsonAdapter(GenderEnum.Adapter.class)
 public enum GenderEnum {
    FEMALE("female"),
    
    MALE("male"),
    
    NO_RESPONSE("no_response");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GenderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private GenderEnum gender;

  public static final String SERIALIZED_NAME_CONTRACT_ID = "contractId";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ID)
  private String contractId;

  public static final String SERIALIZED_NAME_NID = "nid";
  @SerializedName(SERIALIZED_NAME_NID)
  private String nid;

  /**
   * 
   */
  @JsonAdapter(IdentityNumberTypeEnum.Adapter.class)
 public enum IdentityNumberTypeEnum {
    DNI("dni"),
    
    NIE("nie"),
    
    RUT("rut"),
    
    OTHER("other");

    private String value;

    IdentityNumberTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IdentityNumberTypeEnum fromValue(String value) {
      for (IdentityNumberTypeEnum b : IdentityNumberTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IdentityNumberTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IdentityNumberTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IdentityNumberTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IdentityNumberTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IDENTITY_NUMBER_TYPE = "identityNumberType";
  @SerializedName(SERIALIZED_NAME_IDENTITY_NUMBER_TYPE)
  private IdentityNumberTypeEnum identityNumberType;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_PRICE_PER_HOUR = "pricePerHour";
  @SerializedName(SERIALIZED_NAME_PRICE_PER_HOUR)
  private Float pricePerHour;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "accountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private LocalDate dateOfBirth;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CoreV3EmployeeCustomFieldsInner> customFields = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private Integer children;

  public static final String SERIALIZED_NAME_DISABILITY = "disability";
  @SerializedName(SERIALIZED_NAME_DISABILITY)
  private Integer disability;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_PROVINCE = "province";
  @SerializedName(SERIALIZED_NAME_PROVINCE)
  private String province;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_PERSONAL_MAIL = "personalMail";
  @SerializedName(SERIALIZED_NAME_PERSONAL_MAIL)
  private String personalMail;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private String maritalStatus;

  public static final String SERIALIZED_NAME_EMERGENCY_PHONE = "emergencyPhone";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_PHONE)
  private String emergencyPhone;

  public static final String SERIALIZED_NAME_SALARY_RANGE = "salaryRange";
  @SerializedName(SERIALIZED_NAME_SALARY_RANGE)
  private String salaryRange;

  public static final String SERIALIZED_NAME_STUDY_LEVEL = "studyLevel";
  @SerializedName(SERIALIZED_NAME_STUDY_LEVEL)
  private String studyLevel;

  public static final String SERIALIZED_NAME_PROFESSIONAL_CATEGORY_CODE = "professionalCategoryCode";
  @SerializedName(SERIALIZED_NAME_PROFESSIONAL_CATEGORY_CODE)
  private String professionalCategoryCode;

  public static final String SERIALIZED_NAME_PROFESSIONAL_CATEGORY_DESCRIPTION = "professionalCategoryDescription";
  @SerializedName(SERIALIZED_NAME_PROFESSIONAL_CATEGORY_DESCRIPTION)
  private String professionalCategoryDescription;

  public static final String SERIALIZED_NAME_BIC = "bic";
  @SerializedName(SERIALIZED_NAME_BIC)
  private String bic;

  public VacationDayOffRequestsAcceptRequestResponseDataEmployee() {
  }

  public VacationDayOffRequestsAcceptRequestResponseDataEmployee description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * The description of the employee
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the employee")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee id(UUID id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    
    
    
    this.id = id;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lucas", value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "García", value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee workStatus(WorkStatusEnum workStatus) {
    
    
    
    
    this.workStatus = workStatus;
    return this;
  }

   /**
   * Get workStatus
   * @return workStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkStatusEnum getWorkStatus() {
    return workStatus;
  }


  public void setWorkStatus(WorkStatusEnum workStatus) {
    
    
    
    this.workStatus = workStatus;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee imageProfileURL(String imageProfileURL) {
    
    
    
    
    this.imageProfileURL = imageProfileURL;
    return this;
  }

   /**
   * Get imageProfileURL
   * @return imageProfileURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://sesame-v2-prod-companies.s3.eu-west-3.amazonaws.com/48351485-1659-413d-bf7f-3ca34fadb521/public-read/g892f1fb-55a3-4e32-9cc9-7c19faa70gaa.png", value = "")

  public String getImageProfileURL() {
    return imageProfileURL;
  }


  public void setImageProfileURL(String imageProfileURL) {
    
    
    
    this.imageProfileURL = imageProfileURL;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee code(Integer code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getCode() {
    return code;
  }


  public void setCode(Integer code) {
    
    
    
    this.code = code;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee pin(Integer pin) {
    
    
    
    
    this.pin = pin;
    return this;
  }

   /**
   * Get pin
   * @return pin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "")

  public Integer getPin() {
    return pin;
  }


  public void setPin(Integer pin) {
    
    
    
    this.pin = pin;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+34 111 11 11 11", value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee company(VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany company) {
    
    
    
    
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany getCompany() {
    return company;
  }


  public void setCompany(VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany company) {
    
    
    
    this.company = company;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee gender(GenderEnum gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * 
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GenderEnum getGender() {
    return gender;
  }


  public void setGender(GenderEnum gender) {
    
    
    
    this.gender = gender;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee contractId(String contractId) {
    
    
    
    
    this.contractId = contractId;
    return this;
  }

   /**
   * The identifier of your internal employee contract
   * @return contractId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of your internal employee contract")

  public String getContractId() {
    return contractId;
  }


  public void setContractId(String contractId) {
    
    
    
    this.contractId = contractId;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee nid(String nid) {
    
    
    
    
    this.nid = nid;
    return this;
  }

   /**
   * The National Identity Document of the employee
   * @return nid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The National Identity Document of the employee")

  public String getNid() {
    return nid;
  }


  public void setNid(String nid) {
    
    
    
    this.nid = nid;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee identityNumberType(IdentityNumberTypeEnum identityNumberType) {
    
    
    
    
    this.identityNumberType = identityNumberType;
    return this;
  }

   /**
   * 
   * @return identityNumberType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityNumberTypeEnum getIdentityNumberType() {
    return identityNumberType;
  }


  public void setIdentityNumberType(IdentityNumberTypeEnum identityNumberType) {
    
    
    
    this.identityNumberType = identityNumberType;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * The Social Security Number of the employee
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Social Security Number of the employee")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee pricePerHour(Float pricePerHour) {
    
    
    
    
    this.pricePerHour = pricePerHour;
    return this;
  }

   /**
   * The Price per hour of the employee
   * @return pricePerHour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Price per hour of the employee")

  public Float getPricePerHour() {
    return pricePerHour;
  }


  public void setPricePerHour(Float pricePerHour) {
    
    
    
    this.pricePerHour = pricePerHour;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee accountNumber(String accountNumber) {
    
    
    
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * The Account Number of the employee
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Account Number of the employee")

  public String getAccountNumber() {
    return accountNumber;
  }


  public void setAccountNumber(String accountNumber) {
    
    
    
    this.accountNumber = accountNumber;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee dateOfBirth(LocalDate dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * 
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(LocalDate dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee customFields(List<CoreV3EmployeeCustomFieldsInner> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public VacationDayOffRequestsAcceptRequestResponseDataEmployee addCustomFieldsItem(CoreV3EmployeeCustomFieldsInner customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CoreV3EmployeeCustomFieldsInner> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(List<CoreV3EmployeeCustomFieldsInner> customFields) {
    
    
    
    this.customFields = customFields;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T10:00:00+01:00", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T10:00:00+01:00", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee children(Integer children) {
    
    
    
    
    this.children = children;
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public Integer getChildren() {
    return children;
  }


  public void setChildren(Integer children) {
    
    
    
    this.children = children;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee disability(Integer disability) {
    
    
    
    
    this.disability = disability;
    return this;
  }

   /**
   * Get disability
   * @return disability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25", value = "")

  public Integer getDisability() {
    return disability;
  }


  public void setDisability(Integer disability) {
    
    
    
    this.disability = disability;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee address(String address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * The Address of the employee
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Address of the employee")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    
    
    
    this.address = address;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee postalCode(String postalCode) {
    
    
    
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postal code of the employee
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The postal code of the employee")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    
    
    
    this.postalCode = postalCode;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * The city of the employee
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The city of the employee")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee province(String province) {
    
    
    
    
    this.province = province;
    return this;
  }

   /**
   * The province of the employee
   * @return province
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The province of the employee")

  public String getProvince() {
    return province;
  }


  public void setProvince(String province) {
    
    
    
    this.province = province;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * The country of the employee
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country of the employee")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee nationality(String nationality) {
    
    
    
    
    this.nationality = nationality;
    return this;
  }

   /**
   * The nationality of the employee
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The nationality of the employee")

  public String getNationality() {
    return nationality;
  }


  public void setNationality(String nationality) {
    
    
    
    this.nationality = nationality;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee personalMail(String personalMail) {
    
    
    
    
    this.personalMail = personalMail;
    return this;
  }

   /**
   * Get personalMail
   * @return personalMail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPersonalMail() {
    return personalMail;
  }


  public void setPersonalMail(String personalMail) {
    
    
    
    this.personalMail = personalMail;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee maritalStatus(String maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Get maritalStatus
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(String maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee emergencyPhone(String emergencyPhone) {
    
    
    
    
    this.emergencyPhone = emergencyPhone;
    return this;
  }

   /**
   * The emergency phone of the employee
   * @return emergencyPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The emergency phone of the employee")

  public String getEmergencyPhone() {
    return emergencyPhone;
  }


  public void setEmergencyPhone(String emergencyPhone) {
    
    
    
    this.emergencyPhone = emergencyPhone;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee salaryRange(String salaryRange) {
    
    
    
    
    this.salaryRange = salaryRange;
    return this;
  }

   /**
   * The salary range of the employee
   * @return salaryRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The salary range of the employee")

  public String getSalaryRange() {
    return salaryRange;
  }


  public void setSalaryRange(String salaryRange) {
    
    
    
    this.salaryRange = salaryRange;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee studyLevel(String studyLevel) {
    
    
    
    
    this.studyLevel = studyLevel;
    return this;
  }

   /**
   * The study level of the employee
   * @return studyLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The study level of the employee")

  public String getStudyLevel() {
    return studyLevel;
  }


  public void setStudyLevel(String studyLevel) {
    
    
    
    this.studyLevel = studyLevel;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee professionalCategoryCode(String professionalCategoryCode) {
    
    
    
    
    this.professionalCategoryCode = professionalCategoryCode;
    return this;
  }

   /**
   * The professional category code of the employee
   * @return professionalCategoryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The professional category code of the employee")

  public String getProfessionalCategoryCode() {
    return professionalCategoryCode;
  }


  public void setProfessionalCategoryCode(String professionalCategoryCode) {
    
    
    
    this.professionalCategoryCode = professionalCategoryCode;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee professionalCategoryDescription(String professionalCategoryDescription) {
    
    
    
    
    this.professionalCategoryDescription = professionalCategoryDescription;
    return this;
  }

   /**
   * The professional category description of the employee
   * @return professionalCategoryDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The professional category description of the employee")

  public String getProfessionalCategoryDescription() {
    return professionalCategoryDescription;
  }


  public void setProfessionalCategoryDescription(String professionalCategoryDescription) {
    
    
    
    this.professionalCategoryDescription = professionalCategoryDescription;
  }


  public VacationDayOffRequestsAcceptRequestResponseDataEmployee bic(String bic) {
    
    
    
    
    this.bic = bic;
    return this;
  }

   /**
   * Get bic
   * @return bic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBic() {
    return bic;
  }


  public void setBic(String bic) {
    
    
    
    this.bic = bic;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VacationDayOffRequestsAcceptRequestResponseDataEmployee instance itself
   */
  public VacationDayOffRequestsAcceptRequestResponseDataEmployee putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VacationDayOffRequestsAcceptRequestResponseDataEmployee vacationDayOffRequestsAcceptRequestResponseDataEmployee = (VacationDayOffRequestsAcceptRequestResponseDataEmployee) o;
    return Objects.equals(this.description, vacationDayOffRequestsAcceptRequestResponseDataEmployee.description) &&
        Objects.equals(this.id, vacationDayOffRequestsAcceptRequestResponseDataEmployee.id) &&
        Objects.equals(this.firstName, vacationDayOffRequestsAcceptRequestResponseDataEmployee.firstName) &&
        Objects.equals(this.lastName, vacationDayOffRequestsAcceptRequestResponseDataEmployee.lastName) &&
        Objects.equals(this.email, vacationDayOffRequestsAcceptRequestResponseDataEmployee.email) &&
        Objects.equals(this.workStatus, vacationDayOffRequestsAcceptRequestResponseDataEmployee.workStatus) &&
        Objects.equals(this.imageProfileURL, vacationDayOffRequestsAcceptRequestResponseDataEmployee.imageProfileURL) &&
        Objects.equals(this.code, vacationDayOffRequestsAcceptRequestResponseDataEmployee.code) &&
        Objects.equals(this.pin, vacationDayOffRequestsAcceptRequestResponseDataEmployee.pin) &&
        Objects.equals(this.phone, vacationDayOffRequestsAcceptRequestResponseDataEmployee.phone) &&
        Objects.equals(this.company, vacationDayOffRequestsAcceptRequestResponseDataEmployee.company) &&
        Objects.equals(this.gender, vacationDayOffRequestsAcceptRequestResponseDataEmployee.gender) &&
        Objects.equals(this.contractId, vacationDayOffRequestsAcceptRequestResponseDataEmployee.contractId) &&
        Objects.equals(this.nid, vacationDayOffRequestsAcceptRequestResponseDataEmployee.nid) &&
        Objects.equals(this.identityNumberType, vacationDayOffRequestsAcceptRequestResponseDataEmployee.identityNumberType) &&
        Objects.equals(this.ssn, vacationDayOffRequestsAcceptRequestResponseDataEmployee.ssn) &&
        Objects.equals(this.pricePerHour, vacationDayOffRequestsAcceptRequestResponseDataEmployee.pricePerHour) &&
        Objects.equals(this.accountNumber, vacationDayOffRequestsAcceptRequestResponseDataEmployee.accountNumber) &&
        Objects.equals(this.dateOfBirth, vacationDayOffRequestsAcceptRequestResponseDataEmployee.dateOfBirth) &&
        Objects.equals(this.customFields, vacationDayOffRequestsAcceptRequestResponseDataEmployee.customFields) &&
        Objects.equals(this.createdAt, vacationDayOffRequestsAcceptRequestResponseDataEmployee.createdAt) &&
        Objects.equals(this.updatedAt, vacationDayOffRequestsAcceptRequestResponseDataEmployee.updatedAt) &&
        Objects.equals(this.status, vacationDayOffRequestsAcceptRequestResponseDataEmployee.status) &&
        Objects.equals(this.children, vacationDayOffRequestsAcceptRequestResponseDataEmployee.children) &&
        Objects.equals(this.disability, vacationDayOffRequestsAcceptRequestResponseDataEmployee.disability) &&
        Objects.equals(this.address, vacationDayOffRequestsAcceptRequestResponseDataEmployee.address) &&
        Objects.equals(this.postalCode, vacationDayOffRequestsAcceptRequestResponseDataEmployee.postalCode) &&
        Objects.equals(this.city, vacationDayOffRequestsAcceptRequestResponseDataEmployee.city) &&
        Objects.equals(this.province, vacationDayOffRequestsAcceptRequestResponseDataEmployee.province) &&
        Objects.equals(this.country, vacationDayOffRequestsAcceptRequestResponseDataEmployee.country) &&
        Objects.equals(this.nationality, vacationDayOffRequestsAcceptRequestResponseDataEmployee.nationality) &&
        Objects.equals(this.personalMail, vacationDayOffRequestsAcceptRequestResponseDataEmployee.personalMail) &&
        Objects.equals(this.maritalStatus, vacationDayOffRequestsAcceptRequestResponseDataEmployee.maritalStatus) &&
        Objects.equals(this.emergencyPhone, vacationDayOffRequestsAcceptRequestResponseDataEmployee.emergencyPhone) &&
        Objects.equals(this.salaryRange, vacationDayOffRequestsAcceptRequestResponseDataEmployee.salaryRange) &&
        Objects.equals(this.studyLevel, vacationDayOffRequestsAcceptRequestResponseDataEmployee.studyLevel) &&
        Objects.equals(this.professionalCategoryCode, vacationDayOffRequestsAcceptRequestResponseDataEmployee.professionalCategoryCode) &&
        Objects.equals(this.professionalCategoryDescription, vacationDayOffRequestsAcceptRequestResponseDataEmployee.professionalCategoryDescription) &&
        Objects.equals(this.bic, vacationDayOffRequestsAcceptRequestResponseDataEmployee.bic)&&
        Objects.equals(this.additionalProperties, vacationDayOffRequestsAcceptRequestResponseDataEmployee.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, firstName, lastName, email, workStatus, imageProfileURL, code, pin, phone, company, gender, contractId, nid, identityNumberType, ssn, pricePerHour, accountNumber, dateOfBirth, customFields, createdAt, updatedAt, status, children, disability, address, postalCode, city, province, country, nationality, personalMail, maritalStatus, emergencyPhone, salaryRange, studyLevel, professionalCategoryCode, professionalCategoryDescription, bic, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VacationDayOffRequestsAcceptRequestResponseDataEmployee {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    workStatus: ").append(toIndentedString(workStatus)).append("\n");
    sb.append("    imageProfileURL: ").append(toIndentedString(imageProfileURL)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    nid: ").append(toIndentedString(nid)).append("\n");
    sb.append("    identityNumberType: ").append(toIndentedString(identityNumberType)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    pricePerHour: ").append(toIndentedString(pricePerHour)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    disability: ").append(toIndentedString(disability)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    personalMail: ").append(toIndentedString(personalMail)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    emergencyPhone: ").append(toIndentedString(emergencyPhone)).append("\n");
    sb.append("    salaryRange: ").append(toIndentedString(salaryRange)).append("\n");
    sb.append("    studyLevel: ").append(toIndentedString(studyLevel)).append("\n");
    sb.append("    professionalCategoryCode: ").append(toIndentedString(professionalCategoryCode)).append("\n");
    sb.append("    professionalCategoryDescription: ").append(toIndentedString(professionalCategoryDescription)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("email");
    openapiFields.add("workStatus");
    openapiFields.add("imageProfileURL");
    openapiFields.add("code");
    openapiFields.add("pin");
    openapiFields.add("phone");
    openapiFields.add("company");
    openapiFields.add("gender");
    openapiFields.add("contractId");
    openapiFields.add("nid");
    openapiFields.add("identityNumberType");
    openapiFields.add("ssn");
    openapiFields.add("pricePerHour");
    openapiFields.add("accountNumber");
    openapiFields.add("dateOfBirth");
    openapiFields.add("customFields");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("status");
    openapiFields.add("children");
    openapiFields.add("disability");
    openapiFields.add("address");
    openapiFields.add("postalCode");
    openapiFields.add("city");
    openapiFields.add("province");
    openapiFields.add("country");
    openapiFields.add("nationality");
    openapiFields.add("personalMail");
    openapiFields.add("maritalStatus");
    openapiFields.add("emergencyPhone");
    openapiFields.add("salaryRange");
    openapiFields.add("studyLevel");
    openapiFields.add("professionalCategoryCode");
    openapiFields.add("professionalCategoryDescription");
    openapiFields.add("bic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VacationDayOffRequestsAcceptRequestResponseDataEmployee
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VacationDayOffRequestsAcceptRequestResponseDataEmployee.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VacationDayOffRequestsAcceptRequestResponseDataEmployee is not found in the empty JSON string", VacationDayOffRequestsAcceptRequestResponseDataEmployee.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("workStatus") != null && !jsonObj.get("workStatus").isJsonNull()) && !jsonObj.get("workStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workStatus").toString()));
      }
      if ((jsonObj.get("imageProfileURL") != null && !jsonObj.get("imageProfileURL").isJsonNull()) && !jsonObj.get("imageProfileURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageProfileURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageProfileURL").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      // validate the optional field `company`
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) {
        VacationDayOffRequestsAcceptRequestResponseDataEmployeeCompany.validateJsonObject(jsonObj.getAsJsonObject("company"));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("contractId") != null && !jsonObj.get("contractId").isJsonNull()) && !jsonObj.get("contractId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractId").toString()));
      }
      if ((jsonObj.get("nid") != null && !jsonObj.get("nid").isJsonNull()) && !jsonObj.get("nid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nid").toString()));
      }
      if ((jsonObj.get("identityNumberType") != null && !jsonObj.get("identityNumberType").isJsonNull()) && !jsonObj.get("identityNumberType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identityNumberType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identityNumberType").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("accountNumber") != null && !jsonObj.get("accountNumber").isJsonNull()) && !jsonObj.get("accountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountNumber").toString()));
      }
      if (jsonObj.get("customFields") != null && !jsonObj.get("customFields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("customFields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFields` to be an array in the JSON string but got `%s`", jsonObj.get("customFields").toString()));
          }

          // validate the optional field `customFields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CoreV3EmployeeCustomFieldsInner.validateJsonObject(jsonArraycustomFields.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) && !jsonObj.get("updatedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedAt").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("province") != null && !jsonObj.get("province").isJsonNull()) && !jsonObj.get("province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("province").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("nationality") != null && !jsonObj.get("nationality").isJsonNull()) && !jsonObj.get("nationality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality").toString()));
      }
      if (!jsonObj.get("personalMail").isJsonNull() && (jsonObj.get("personalMail") != null && !jsonObj.get("personalMail").isJsonNull()) && !jsonObj.get("personalMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalMail").toString()));
      }
      if ((jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) && !jsonObj.get("maritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatus").toString()));
      }
      if ((jsonObj.get("emergencyPhone") != null && !jsonObj.get("emergencyPhone").isJsonNull()) && !jsonObj.get("emergencyPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emergencyPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emergencyPhone").toString()));
      }
      if ((jsonObj.get("salaryRange") != null && !jsonObj.get("salaryRange").isJsonNull()) && !jsonObj.get("salaryRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryRange").toString()));
      }
      if ((jsonObj.get("studyLevel") != null && !jsonObj.get("studyLevel").isJsonNull()) && !jsonObj.get("studyLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `studyLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("studyLevel").toString()));
      }
      if ((jsonObj.get("professionalCategoryCode") != null && !jsonObj.get("professionalCategoryCode").isJsonNull()) && !jsonObj.get("professionalCategoryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `professionalCategoryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("professionalCategoryCode").toString()));
      }
      if ((jsonObj.get("professionalCategoryDescription") != null && !jsonObj.get("professionalCategoryDescription").isJsonNull()) && !jsonObj.get("professionalCategoryDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `professionalCategoryDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("professionalCategoryDescription").toString()));
      }
      if ((jsonObj.get("bic") != null && !jsonObj.get("bic").isJsonNull()) && !jsonObj.get("bic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bic").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VacationDayOffRequestsAcceptRequestResponseDataEmployee.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VacationDayOffRequestsAcceptRequestResponseDataEmployee' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VacationDayOffRequestsAcceptRequestResponseDataEmployee> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VacationDayOffRequestsAcceptRequestResponseDataEmployee.class));

       return (TypeAdapter<T>) new TypeAdapter<VacationDayOffRequestsAcceptRequestResponseDataEmployee>() {
           @Override
           public void write(JsonWriter out, VacationDayOffRequestsAcceptRequestResponseDataEmployee value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VacationDayOffRequestsAcceptRequestResponseDataEmployee read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VacationDayOffRequestsAcceptRequestResponseDataEmployee instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VacationDayOffRequestsAcceptRequestResponseDataEmployee given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VacationDayOffRequestsAcceptRequestResponseDataEmployee
  * @throws IOException if the JSON string is invalid with respect to VacationDayOffRequestsAcceptRequestResponseDataEmployee
  */
  public static VacationDayOffRequestsAcceptRequestResponseDataEmployee fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VacationDayOffRequestsAcceptRequestResponseDataEmployee.class);
  }

 /**
  * Convert an instance of VacationDayOffRequestsAcceptRequestResponseDataEmployee to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

