/*
 * Sesame Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.RecruitmentUpdateCandidateResponseDataVacancyCategory;
import com.konfigthis.client.model.RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy;
import com.konfigthis.client.model.RecruitmentUpdateCandidateResponseDataVacancyScheduleType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * RecruitmentUpdateCandidateResponseDataVacancy
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class RecruitmentUpdateCandidateResponseDataVacancy {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private UUID companyId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_CONTACT_TYPE = "contactType";
  @SerializedName(SERIALIZED_NAME_CONTACT_TYPE)
  private String contactType;

  public static final String SERIALIZED_NAME_EXPERIENCE = "experience";
  @SerializedName(SERIALIZED_NAME_EXPERIENCE)
  private String experience;

  public static final String SERIALIZED_NAME_CREATED_BY_ID = "createdById";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_ID)
  private UUID createdById;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    OPEN("open"),
    
    CLOSED("closed"),
    
    DRAFT("draft");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_OPENED_AT = "openedAt";
  @SerializedName(SERIALIZED_NAME_OPENED_AT)
  private String openedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private Boolean _public;

  public static final String SERIALIZED_NAME_LOCATION_VACANCY = "locationVacancy";
  @SerializedName(SERIALIZED_NAME_LOCATION_VACANCY)
  private RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy locationVacancy;

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "scheduleType";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private RecruitmentUpdateCandidateResponseDataVacancyScheduleType scheduleType;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private RecruitmentUpdateCandidateResponseDataVacancyCategory category;

  public RecruitmentUpdateCandidateResponseDataVacancy() {
  }

  public RecruitmentUpdateCandidateResponseDataVacancy description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy id(UUID id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    
    
    
    this.id = id;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy companyId(UUID companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getCompanyId() {
    return companyId;
  }


  public void setCompanyId(UUID companyId) {
    
    
    
    this.companyId = companyId;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy department(String department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    
    
    
    this.department = department;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy contactType(String contactType) {
    
    
    
    
    this.contactType = contactType;
    return this;
  }

   /**
   * Get contactType
   * @return contactType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContactType() {
    return contactType;
  }


  public void setContactType(String contactType) {
    
    
    
    this.contactType = contactType;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy experience(String experience) {
    
    
    
    
    this.experience = experience;
    return this;
  }

   /**
   * Get experience
   * @return experience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExperience() {
    return experience;
  }


  public void setExperience(String experience) {
    
    
    
    this.experience = experience;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy createdById(UUID createdById) {
    
    
    
    
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getCreatedById() {
    return createdById;
  }


  public void setCreatedById(UUID createdById) {
    
    
    
    this.createdById = createdById;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy openedAt(String openedAt) {
    
    
    
    
    this.openedAt = openedAt;
    return this;
  }

   /**
   * Get openedAt
   * @return openedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T10:00:00+01:00", value = "")

  public String getOpenedAt() {
    return openedAt;
  }


  public void setOpenedAt(String openedAt) {
    
    
    
    this.openedAt = openedAt;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T10:00:00+01:00", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-01T10:00:00+01:00", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy _public(Boolean _public) {
    
    
    
    
    this._public = _public;
    return this;
  }

   /**
   * Get _public
   * @return _public
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPublic() {
    return _public;
  }


  public void setPublic(Boolean _public) {
    
    
    
    this._public = _public;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy locationVacancy(RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy locationVacancy) {
    
    
    
    
    this.locationVacancy = locationVacancy;
    return this;
  }

   /**
   * Get locationVacancy
   * @return locationVacancy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy getLocationVacancy() {
    return locationVacancy;
  }


  public void setLocationVacancy(RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy locationVacancy) {
    
    
    
    this.locationVacancy = locationVacancy;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy scheduleType(RecruitmentUpdateCandidateResponseDataVacancyScheduleType scheduleType) {
    
    
    
    
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Get scheduleType
   * @return scheduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RecruitmentUpdateCandidateResponseDataVacancyScheduleType getScheduleType() {
    return scheduleType;
  }


  public void setScheduleType(RecruitmentUpdateCandidateResponseDataVacancyScheduleType scheduleType) {
    
    
    
    this.scheduleType = scheduleType;
  }


  public RecruitmentUpdateCandidateResponseDataVacancy category(RecruitmentUpdateCandidateResponseDataVacancyCategory category) {
    
    
    
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RecruitmentUpdateCandidateResponseDataVacancyCategory getCategory() {
    return category;
  }


  public void setCategory(RecruitmentUpdateCandidateResponseDataVacancyCategory category) {
    
    
    
    this.category = category;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the RecruitmentUpdateCandidateResponseDataVacancy instance itself
   */
  public RecruitmentUpdateCandidateResponseDataVacancy putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecruitmentUpdateCandidateResponseDataVacancy recruitmentUpdateCandidateResponseDataVacancy = (RecruitmentUpdateCandidateResponseDataVacancy) o;
    return Objects.equals(this.description, recruitmentUpdateCandidateResponseDataVacancy.description) &&
        Objects.equals(this.id, recruitmentUpdateCandidateResponseDataVacancy.id) &&
        Objects.equals(this.companyId, recruitmentUpdateCandidateResponseDataVacancy.companyId) &&
        Objects.equals(this.name, recruitmentUpdateCandidateResponseDataVacancy.name) &&
        Objects.equals(this.department, recruitmentUpdateCandidateResponseDataVacancy.department) &&
        Objects.equals(this.contactType, recruitmentUpdateCandidateResponseDataVacancy.contactType) &&
        Objects.equals(this.experience, recruitmentUpdateCandidateResponseDataVacancy.experience) &&
        Objects.equals(this.createdById, recruitmentUpdateCandidateResponseDataVacancy.createdById) &&
        Objects.equals(this.status, recruitmentUpdateCandidateResponseDataVacancy.status) &&
        Objects.equals(this.openedAt, recruitmentUpdateCandidateResponseDataVacancy.openedAt) &&
        Objects.equals(this.createdAt, recruitmentUpdateCandidateResponseDataVacancy.createdAt) &&
        Objects.equals(this.updatedAt, recruitmentUpdateCandidateResponseDataVacancy.updatedAt) &&
        Objects.equals(this._public, recruitmentUpdateCandidateResponseDataVacancy._public) &&
        Objects.equals(this.locationVacancy, recruitmentUpdateCandidateResponseDataVacancy.locationVacancy) &&
        Objects.equals(this.scheduleType, recruitmentUpdateCandidateResponseDataVacancy.scheduleType) &&
        Objects.equals(this.category, recruitmentUpdateCandidateResponseDataVacancy.category)&&
        Objects.equals(this.additionalProperties, recruitmentUpdateCandidateResponseDataVacancy.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, companyId, name, department, contactType, experience, createdById, status, openedAt, createdAt, updatedAt, _public, locationVacancy, scheduleType, category, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecruitmentUpdateCandidateResponseDataVacancy {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    contactType: ").append(toIndentedString(contactType)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    openedAt: ").append(toIndentedString(openedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    locationVacancy: ").append(toIndentedString(locationVacancy)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("companyId");
    openapiFields.add("name");
    openapiFields.add("department");
    openapiFields.add("contactType");
    openapiFields.add("experience");
    openapiFields.add("createdById");
    openapiFields.add("status");
    openapiFields.add("openedAt");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("public");
    openapiFields.add("locationVacancy");
    openapiFields.add("scheduleType");
    openapiFields.add("category");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RecruitmentUpdateCandidateResponseDataVacancy
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RecruitmentUpdateCandidateResponseDataVacancy.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecruitmentUpdateCandidateResponseDataVacancy is not found in the empty JSON string", RecruitmentUpdateCandidateResponseDataVacancy.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if ((jsonObj.get("contactType") != null && !jsonObj.get("contactType").isJsonNull()) && !jsonObj.get("contactType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactType").toString()));
      }
      if ((jsonObj.get("experience") != null && !jsonObj.get("experience").isJsonNull()) && !jsonObj.get("experience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experience").toString()));
      }
      if ((jsonObj.get("createdById") != null && !jsonObj.get("createdById").isJsonNull()) && !jsonObj.get("createdById").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdById` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdById").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("openedAt") != null && !jsonObj.get("openedAt").isJsonNull()) && !jsonObj.get("openedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `openedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("openedAt").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) && !jsonObj.get("updatedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedAt").toString()));
      }
      // validate the optional field `locationVacancy`
      if (jsonObj.get("locationVacancy") != null && !jsonObj.get("locationVacancy").isJsonNull()) {
        RecruitmentUpdateCandidateResponseDataVacancyLocationVacancy.validateJsonObject(jsonObj.getAsJsonObject("locationVacancy"));
      }
      // validate the optional field `scheduleType`
      if (jsonObj.get("scheduleType") != null && !jsonObj.get("scheduleType").isJsonNull()) {
        RecruitmentUpdateCandidateResponseDataVacancyScheduleType.validateJsonObject(jsonObj.getAsJsonObject("scheduleType"));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        RecruitmentUpdateCandidateResponseDataVacancyCategory.validateJsonObject(jsonObj.getAsJsonObject("category"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecruitmentUpdateCandidateResponseDataVacancy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecruitmentUpdateCandidateResponseDataVacancy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecruitmentUpdateCandidateResponseDataVacancy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecruitmentUpdateCandidateResponseDataVacancy.class));

       return (TypeAdapter<T>) new TypeAdapter<RecruitmentUpdateCandidateResponseDataVacancy>() {
           @Override
           public void write(JsonWriter out, RecruitmentUpdateCandidateResponseDataVacancy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public RecruitmentUpdateCandidateResponseDataVacancy read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             RecruitmentUpdateCandidateResponseDataVacancy instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RecruitmentUpdateCandidateResponseDataVacancy given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RecruitmentUpdateCandidateResponseDataVacancy
  * @throws IOException if the JSON string is invalid with respect to RecruitmentUpdateCandidateResponseDataVacancy
  */
  public static RecruitmentUpdateCandidateResponseDataVacancy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecruitmentUpdateCandidateResponseDataVacancy.class);
  }

 /**
  * Convert an instance of RecruitmentUpdateCandidateResponseDataVacancy to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

